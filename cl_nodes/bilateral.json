{
    "kernel_name": "bilateral",
    "params": {
        "radius": "float",
        "preserve": "float"
    },
    "inputs": {
        "input": "image"
    },
    "outputs": {
        "output": "image"
    },
    "source": [
        "int n_radius = ceil(radius);",
        "int u, v;",
        "float4 center_pix  = READP(input, loc);",
        "float4 accumulated = 0.0f;",
        "float4 tempf       = 0.0f;",
        "float  count       = 0.0f;",
        "float  diff_map, gaussian_weight, weight;",
        "for (v = -n_radius;v <= n_radius; ++v) {",
        "    for (u = -n_radius;u <= n_radius; ++u) {",
        "        tempf = read_imagef(input, sampler, (int2)(gx + u, gy + v));",
        "        diff_map = exp (",
        "            - (   POW2(center_pix.x - tempf.x)",
        "                + POW2(center_pix.y - tempf.y)",
        "                + POW2(center_pix.z - tempf.z))",
        "            * preserve);",
        "        gaussian_weight = exp( - 0.5f * (POW2(u) + POW2(v)) / radius);",
        "        weight = diff_map * gaussian_weight;",
        "        accumulated += tempf * weight;",
        "        count += weight;",
        "    }",
        "}",
        "WRITEP(output, loc, accumulated / count);"
    ]
}